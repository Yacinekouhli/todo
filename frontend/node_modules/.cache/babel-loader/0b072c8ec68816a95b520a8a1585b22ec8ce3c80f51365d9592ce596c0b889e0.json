{"ast":null,"code":"var _jsxFileName = \"/home/yacine/code/todo/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  // Fonction pour récupérer la liste des todos depuis le backend\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/todos\");\n      setTodos(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des todos :\", error);\n    }\n  };\n\n  // Charge les todos au montage du composant\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  // Fonction pour ajouter un nouveau todo (POST)\n  const addTodo = async () => {\n    if (newTodo.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/todos\", {\n        title: newTodo,\n        completed: false\n      });\n      // Ajoute le nouveau todo à la liste\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout du todo :\", error);\n    }\n  };\n\n  // Fonction pour supprimer un todo (DELETE)\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://127.0.0.1:8000/todos/${id}`);\n      // Supprime le todo de la liste locale\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression du todo :\", error);\n    }\n  };\n\n  // Fonction pour mettre à jour (basculer) le statut \"completed\" d'un todo (PUT)\n  const toggleTodo = async id => {\n    try {\n      // Trouve le todo à mettre à jour\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      if (!todoToUpdate) return;\n\n      // Prépare les données mises à jour : on inverse le statut \"completed\"\n      const updatedTodo = {\n        title: todoToUpdate.title,\n        completed: !todoToUpdate.completed\n      };\n\n      // Envoie la requête PUT pour mettre à jour le todo\n      const response = await axios.put(`http://127.0.0.1:8000/todos/${id}`, updatedTodo);\n\n      // Met à jour la liste locale des todos avec la réponse du backend\n      setTodos(todos.map(todo => todo.id === id ? response.data : todo));\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du todo :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ajouter une t\\xE2che\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: todo.completed ? \"line-through\" : \"none\",\n            cursor: \"pointer\",\n            marginRight: \"10px\"\n          },\n          onClick: () => toggleTodo(todo.id),\n          children: [todo.title, \" \", todo.completed ? \"(Fait)\" : \"(À faire)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HJloPNBkTiO05UC91Qpj9J5a300=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","fetchTodos","response","get","data","error","console","addTodo","trim","post","title","completed","deleteTodo","id","delete","filter","todo","toggleTodo","todoToUpdate","find","updatedTodo","put","map","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","margin","textDecoration","cursor","marginRight","_c","$RefreshReg$"],"sources":["/home/yacine/code/todo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  // Fonction pour récupérer la liste des todos depuis le backend\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/todos\");\n      setTodos(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des todos :\", error);\n    }\n  };\n\n  // Charge les todos au montage du composant\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  // Fonction pour ajouter un nouveau todo (POST)\n  const addTodo = async () => {\n    if (newTodo.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/todos\", {\n        title: newTodo,\n        completed: false,\n      });\n      // Ajoute le nouveau todo à la liste\n      setTodos([...todos, response.data]);\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout du todo :\", error);\n    }\n  };\n\n  // Fonction pour supprimer un todo (DELETE)\n  const deleteTodo = async (id) => {\n    try {\n      await axios.delete(`http://127.0.0.1:8000/todos/${id}`);\n      // Supprime le todo de la liste locale\n      setTodos(todos.filter((todo) => todo.id !== id));\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression du todo :\", error);\n    }\n  };\n\n  // Fonction pour mettre à jour (basculer) le statut \"completed\" d'un todo (PUT)\n  const toggleTodo = async (id) => {\n    try {\n      // Trouve le todo à mettre à jour\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n      if (!todoToUpdate) return;\n\n      // Prépare les données mises à jour : on inverse le statut \"completed\"\n      const updatedTodo = {\n        title: todoToUpdate.title,\n        completed: !todoToUpdate.completed,\n      };\n\n      // Envoie la requête PUT pour mettre à jour le todo\n      const response = await axios.put(`http://127.0.0.1:8000/todos/${id}`, updatedTodo);\n      \n      // Met à jour la liste locale des todos avec la réponse du backend\n      setTodos(todos.map((todo) => (todo.id === id ? response.data : todo)));\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du todo :\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Ajouter une tâche\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={addTodo}>Ajouter</button>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id} style={{ margin: \"10px 0\" }}>\n            {/* Le titre est cliquable pour basculer son état \"completed\" */}\n            <span\n              style={{\n                textDecoration: todo.completed ? \"line-through\" : \"none\",\n                cursor: \"pointer\",\n                marginRight: \"10px\",\n              }}\n              onClick={() => toggleTodo(todo.id)}\n            >\n              {todo.title} {todo.completed ? \"(Fait)\" : \"(À faire)\"}\n            </span>\n            <button onClick={() => deleteTodo(todo.id)}>Supprimer</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}