{"ast":null,"code":"var _jsxFileName = \"/home/yacine/code/todo/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // On utilise useState pour créer des variables d'état\n  // \"todos\" stocke la liste des tâches\n  // \"newTodo\" stocke la valeur actuelle de l'input\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  // Fonction pour ajouter une tâche\n  const addTodo = () => {\n    if (newTodo.trim() === \"\") return; // On évite les tâches vides\n    const todo = {\n      id: Date.now(),\n      // Génère un identifiant simple\n      title: newTodo,\n      completed: false\n    };\n    // On met à jour l'état \"todos\" en ajoutant la nouvelle tâche\n    setTodos([...todos, todo]);\n    setNewTodo(\"\"); // Réinitialiser l'input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ajouter une t\\xE2che\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.title, \" \", todo.completed ? \"(Fait)\" : \"(À faire)\"]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9qzns8gAgtpTG51YK+AHdxH8LRs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","addTodo","trim","todo","id","Date","now","title","completed","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/home/yacine/code/todo/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  // On utilise useState pour créer des variables d'état\n  // \"todos\" stocke la liste des tâches\n  // \"newTodo\" stocke la valeur actuelle de l'input\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  // Fonction pour ajouter une tâche\n  const addTodo = () => {\n    if (newTodo.trim() === \"\") return; // On évite les tâches vides\n    const todo = {\n      id: Date.now(), // Génère un identifiant simple\n      title: newTodo,\n      completed: false,\n    };\n    // On met à jour l'état \"todos\" en ajoutant la nouvelle tâche\n    setTodos([...todos, todo]);\n    setNewTodo(\"\"); // Réinitialiser l'input\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Todo List</h1>\n\n      {/* Input pour saisir une nouvelle tâche */}\n      <input\n        type=\"text\"\n        placeholder=\"Ajouter une tâche\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={addTodo}>Ajouter</button>\n\n      {/* Affichage de la liste des tâches */}\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.title} {todo.completed ? \"(Fait)\" : \"(À faire)\"}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;IACnC,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,KAAK,EAAER,OAAO;MACdS,SAAS,EAAE;IACb,CAAC;IACD;IACAV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,IAAI,CAAC,CAAC;IAC1BH,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlBrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAmB;MAC/BC,KAAK,EAAEnB,OAAQ;MACfoB,QAAQ,EAAGC,CAAC,IAAKpB,UAAU,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ4B,OAAO,EAAErB,OAAQ;MAAAU,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAG1CrB,OAAA;MAAAiB,QAAA,EACGd,KAAK,CAAC0B,GAAG,CAAEpB,IAAI,iBACdT,OAAA;QAAAiB,QAAA,GACGR,IAAI,CAACI,KAAK,EAAC,GAAC,EAACJ,IAAI,CAACK,SAAS,GAAG,QAAQ,GAAG,WAAW;MAAA,GAD9CL,IAAI,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}